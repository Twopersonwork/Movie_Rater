{"ast":null,"code":"var _jsxFileName = \"/home/prachi/workspace/Movie_Rater/src/components/Login.js\";\nimport React, { Component } from \"react\";\nimport { Container, CssBaseline, TextField, Button, Grid } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { withCookies } from \"react-cookie\";\nimport { Alert } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.inputChanged = event => {\n      let cred = this.state.credentials;\n      cred[event.target.name] = event.target.value;\n      this.setState({\n        credentials: cred\n      }); // console.log(this.state.credentials);\n    };\n\n    this.login = event => {\n      this.setState({\n        showerror: true\n      });\n      fetch(\"http://127.0.0.1:8000/auth/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(this.state.credentials)\n      }).then(resp => resp.json()).then(res => {\n        if (res.token) {\n          this.props.cookies.set(\"auth-token\", res.token);\n          window.location.href = \"/\";\n        } else {\n          this.setState({\n            errorMsg: res.error,\n            errorNum: res.msg\n          });\n        }\n      }).catch(error => console.log(error));\n      event.preventDefault();\n    };\n\n    this.state = {\n      credentials: {\n        // this is for store the user credentials like username and password\n        username: \"\",\n        password: \"\"\n      },\n      errorMsg: \"\",\n      // store the errorMsg if any\n      errorNum: \"\",\n      // store the errorNum if any\n      showerror: false // if error present then only this will become true\n\n    };\n  } // this method execute when user typed their username and email for storeing into creadentials\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: paper,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: form,\n          onSubmit: this.login,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            style: {\n              marginTop: \"40%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [this.state.showerror && this.state.errorNum == 2 ? /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"danger\",\n                onClick: () => this.setState({\n                  showerror: false\n                }),\n                dismissible: true,\n                children: this.state.errorMsg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this) : null, this.state.showerror && this.state.errorNum == 1 ? /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"danger\",\n                onClick: () => this.setState({\n                  showerror: false\n                }),\n                dismissible: true,\n                children: this.state.errorMsg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this) : null, /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                type: \"text\",\n                fullWidth: true,\n                id: \"username\",\n                value: this.state.credentials.username,\n                label: \"User Name\",\n                name: \"username\",\n                onChange: this.inputChanged,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                type: \"password\",\n                name: \"password\",\n                label: \"Password\",\n                id: \"password\",\n                value: this.state.credentials.password,\n                onChange: this.inputChanged\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                fullWidth: true,\n                variant: \"contained\",\n                color: \"primary\",\n                className: submit,\n                children: \"Log in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"center\",\n            className: \"mt-3\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/signup\",\n                children: \"create an account? Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n} // This is soem CSS for login page\n\n\nconst paper = {\n  marginTop: \"8px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\"\n};\nconst form = {\n  width: \"100%\",\n  marginTop: \"3px\"\n};\nconst submit = {\n  margin: \"2px\"\n};\nexport default _c = withCookies(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/prachi/workspace/Movie_Rater/src/components/Login.js"],"names":["React","Component","Container","CssBaseline","TextField","Button","Grid","Link","withCookies","Alert","Login","constructor","props","inputChanged","event","cred","state","credentials","target","name","value","setState","login","showerror","fetch","method","headers","body","JSON","stringify","then","resp","json","res","token","cookies","set","window","location","href","errorMsg","error","errorNum","msg","catch","console","log","preventDefault","username","password","render","paper","form","marginTop","submit","display","flexDirection","alignItems","width","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Container,\n  CssBaseline,\n  TextField,\n  Button,\n  Grid,\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { withCookies } from \"react-cookie\";\nimport { Alert } from \"react-bootstrap\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      credentials: {   // this is for store the user credentials like username and password\n        username: \"\",\n        password: \"\",\n      },\n      errorMsg: \"\",       // store the errorMsg if any\n      errorNum: \"\",       // store the errorNum if any\n      showerror: false,   // if error present then only this will become true\n    };\n  } \n\n  // this method execute when user typed their username and email for storeing into creadentials\n\n  inputChanged = (event) => {\n    let cred = this.state.credentials;\n    cred[event.target.name] = event.target.value;\n    this.setState({ credentials: cred });\n    // console.log(this.state.credentials);\n  };\n\n\n  /* \n  this method will run when user clicked on login.\n  it will get the token from the server for particular user \n  ,so Now user have access to rate the movies.\n  and also set token in cookies.\n\n  */ \n  login = (event) => {\n    this.setState({ showerror: true });\n    fetch(\"http://127.0.0.1:8000/auth/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(this.state.credentials),\n    })\n      .then((resp) => resp.json())\n      .then((res) => {\n        if (res.token) {\n          this.props.cookies.set(\"auth-token\", res.token);\n          window.location.href = \"/\";\n        } else {\n          this.setState({ errorMsg: res.error, errorNum: res.msg });\n        }\n      })\n      .catch((error) => console.log(error));\n    event.preventDefault();\n  };\n\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={paper}>\n          <form className={form} onSubmit={this.login}>\n            <Grid container spacing={2} style={{ marginTop: \"40%\" }}>\n              <Grid item xs={12}>\n\n                {/* This two conditions for showing the error messgae */}\n                {this.state.showerror && this.state.errorNum == 2 ? (\n                  <Alert\n                    variant=\"danger\"\n                    onClick={() => this.setState({ showerror: false })}\n                    dismissible\n                  >\n                    {this.state.errorMsg}\n                  </Alert>\n                ) : null}\n                {this.state.showerror && this.state.errorNum == 1 ? (\n                  <Alert\n                    variant=\"danger\"\n                    onClick={() => this.setState({ showerror: false })}\n                    dismissible\n                  >\n                    {this.state.errorMsg}\n                  </Alert>\n                ) : null}\n                {/* This textfield for username */}\n                <TextField\n                  variant=\"outlined\"\n                  type=\"text\"\n                  fullWidth\n                  id=\"username\"\n                  value={this.state.credentials.username}\n                  label=\"User Name\"\n                  name=\"username\"\n                  onChange={this.inputChanged}\n                  required\n                />\n              </Grid>\n              <Grid item xs={12}>\n                {/* This textfield for email */}\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  type=\"password\"\n                  name=\"password\"\n                  label=\"Password\"\n                  id=\"password\"\n                  value={this.state.credentials.password}\n                  onChange={this.inputChanged}\n                />\n              </Grid>\n              <Grid item xs={12}>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={submit}\n              >\n                Log in\n              </Button>\n            </Grid>\n            </Grid>\n           \n\n            <Grid container justify=\"center\" className=\"mt-3\">\n              <Grid item>\n                {/* Route to the signup page */}\n                <Link to={\"/signup\"}>create an account? Sign in</Link>  \n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    );\n  }\n}\n\n// This is soem CSS for login page\nconst paper = {\n  marginTop: \"8px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n};\n\nconst form = {\n  width: \"100%\",\n  marginTop: \"3px\",\n};\n\nconst submit = {\n  margin: \"2px\",\n};\n\nexport default withCookies(Login);\n"]},"metadata":{},"sourceType":"module"}