{"ast":null,"code":"var _jsxFileName = \"/home/prachi/workspace/Movie_Rater/src/components/SignUp.js\";\nimport React, { Component } from \"react\";\nimport { Container, CssBaseline, Grid, TextField, Button } from \"@material-ui/core\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Alert } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.inputChanged = event => {\n      let cred = this.state.credentials;\n      cred[event.target.name] = event.target.value;\n      this.setState({\n        credentials: cred\n      });\n      console.log(this.state.credentials);\n    };\n\n    this.signup = event => {\n      console.log(\"hello\");\n      fetch(\"http://127.0.0.1:8000/api/users/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(this.state.credentials)\n      }).then(resp => resp.json()).then(res => {\n        // This is for checking if user credentials have any errors or not.\n        if (res.id) {\n          console.log(\"allfine\", res);\n          this.setState({\n            created: true\n          });\n        } else {\n          console.log(\"notfine\", res);\n\n          if (res.username) {\n            this.setState({\n              usernameError: res.username[0]\n            });\n          }\n\n          if (res.email) {\n            this.setState({\n              emailError: res.email[0]\n            });\n          }\n        }\n      }).catch(error => console.log(error));\n      event.preventDefault();\n    };\n\n    this.state = {\n      created: false,\n      // for checking if account is created or not.\n      usernameError: \"\",\n      // store the username error\n      emailError: \"\",\n      // store the email error\n      credentials: {\n        // user credentials\n        username: \"\",\n        email: \"\",\n        password: \"\"\n      }\n    };\n  } // this method execute when user typed their username,email and password for storering into creadentials\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: paper,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: form,\n          onSubmit: this.signup,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            style: {\n              marginTop: \"40%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [this.state.usernameError.length > 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"danger\",\n                onClick: () => this.setState({\n                  usernameError: \"\"\n                }),\n                dismissible: true,\n                children: this.state.usernameError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this) : null, /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                type: \"text\",\n                id: \"username\",\n                label: \"User Name\",\n                name: \"username\",\n                autoComplete: \"username\",\n                onChange: this.inputChanged\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [this.state.emailError.length > 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"danger\",\n                onClick: () => this.setState({\n                  emailError: \"\"\n                }),\n                dismissible: true,\n                children: this.state.emailError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this) : null, /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                type: \"email\",\n                id: \"email\",\n                label: \"Email id\",\n                name: \"email\",\n                autoComplete: \"email\",\n                onChange: this.inputChanged\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                variant: \"outlined\",\n                required: true,\n                fullWidth: true,\n                name: \"password\",\n                label: \"Password\",\n                type: \"password\",\n                id: \"password\",\n                autoComplete: \"current-password\",\n                onChange: this.inputChanged\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                fullWidth: true,\n                variant: \"contained\",\n                color: \"primary\",\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"center\",\n            className: \"mt-2\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                children: \"Already have an account? Log in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), this.state.created ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 35\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n} // This is some css for signup\n\n\nconst paper = {\n  marginTop: \"8px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\"\n};\nconst form = {\n  width: \"100%\",\n  marginTop: \"3px\"\n};\nexport default SignUp;","map":{"version":3,"sources":["/home/prachi/workspace/Movie_Rater/src/components/SignUp.js"],"names":["React","Component","Container","CssBaseline","Grid","TextField","Button","Link","Redirect","Alert","SignUp","constructor","props","inputChanged","event","cred","state","credentials","target","name","value","setState","console","log","signup","fetch","method","headers","body","JSON","stringify","then","resp","json","res","id","created","username","usernameError","email","emailError","catch","error","preventDefault","password","render","paper","form","marginTop","length","display","flexDirection","alignItems","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Container,\n  CssBaseline,\n  Grid,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Alert } from \"react-bootstrap\";\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      created: false, // for checking if account is created or not.\n      usernameError: \"\", // store the username error\n      emailError: \"\", // store the email error\n      credentials: {\n        // user credentials\n        username: \"\",\n        email: \"\",\n        password: \"\",\n      },\n    };\n  }\n\n  // this method execute when user typed their username,email and password for storering into creadentials\n\n  inputChanged = (event) => {\n    let cred = this.state.credentials;\n    cred[event.target.name] = event.target.value;\n    this.setState({ credentials: cred });\n    console.log(this.state.credentials);\n  };\n\n  // when user clicked on signup then this method post the user credentials to the server for creating new user.\n  signup = (event) => {\n    console.log(\"hello\");\n    fetch(\"http://127.0.0.1:8000/api/users/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(this.state.credentials),\n    })\n      .then((resp) => resp.json())\n      .then((res) => {\n        // This is for checking if user credentials have any errors or not.\n        if (res.id) {\n          console.log(\"allfine\", res);\n          this.setState({ created: true });\n        } else {\n          console.log(\"notfine\", res);\n          if (res.username) {\n            this.setState({ usernameError: res.username[0] });\n          }\n          if (res.email) {\n            this.setState({ emailError: res.email[0] });\n          }\n        }\n      })\n      .catch((error) => console.log(error));\n\n    event.preventDefault();\n  };\n\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={paper}>\n          <form className={form} onSubmit={this.signup}>\n            <Grid container spacing={2} style={{ marginTop: \"40%\" }}>\n              <Grid item xs={12}>\n                {/* For check username errors */}\n                {this.state.usernameError.length > 0 ? (\n                  <Alert\n                    variant=\"danger\"\n                    onClick={() => this.setState({ usernameError: \"\" })}\n                    dismissible\n                  >\n                    {this.state.usernameError}\n                  </Alert>\n                ) : null}\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  type=\"text\"\n                  id=\"username\"\n                  label=\"User Name\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                  onChange={this.inputChanged}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                {/* For check email error */}\n                {this.state.emailError.length > 0 ? (\n                  <Alert\n                    variant=\"danger\"\n                    onClick={() => this.setState({ emailError: \"\" })}\n                    dismissible\n                  >\n                    {this.state.emailError}\n                  </Alert>\n                ) : null}\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  type=\"email\"\n                  id=\"email\"\n                  label=\"Email id\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={this.inputChanged}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange={this.inputChanged}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Sign Up\n                </Button>\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\" className=\"mt-2\">\n              <Grid item>\n                <Link to={\"/login\"}>Already have an account? Log in</Link>\n              </Grid>\n            </Grid>\n            {this.state.created ? <Redirect to={\"/login\"} /> : null}\n          </form>\n        </div>\n      </Container>\n    );\n  }\n}\n\n// This is some css for signup\nconst paper = {\n  marginTop: \"8px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n};\n\nconst form = {\n  width: \"100%\",\n  marginTop: \"3px\",\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}